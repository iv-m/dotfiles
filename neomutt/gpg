set	crypt_autosign=yes
set	crypt_replysign=yes
set	crypt_replyencrypt=yes
set	crypt_replysignencrypted=yes

set	pgp_use_gpg_agent=yes
set	pgp_sign_as=2A82451F
#set	pgp_sign_micalg=pgp-sha1

#	decode application/pgp
set	pgp_decode_command="gpg2 %?p?--passphrase-fd 0? -q --batch --output - --no-tty %f"

#	verify a pgp/mime signature
set	pgp_verify_command="gpg2 -q --batch --no-verbose -o - --no-tty --verify %s %f"

#	decrypt a pgp/mime attachment
set	pgp_decrypt_command="gpg2 --passphrase-fd 0 -q --batch --output - --no-tty %f"

# create a pgp/mime signed attachment
set	pgp_sign_command="gpg2 -q --batch --output - --no-tty --passphrase-fd 0 --armor --detach-sign --textmode %?a?-u %a? %f"
# set	pgp_sign_command="/usr/bin/gpg2 --batch --output - --armor --detach-sign --use-agent --no-secmem-warning %?a?-u %a? %f"


# create a application/pgp signed (old-style) message
set	pgp_clearsign_command="gpg2 -q --batch --output - --no-tty --passphrase-fd 0 --armor --textmode --clearsign %?a?-u %a? %f"

# create a pgp/mime encrypted attachment
set	pgp_encrypt_only_command="pgpewrap gpg2 -q --batch --output - --no-tty --encrypt --textmode --armor --always-trust -- -r %r -- %f"

# create a pgp/mime encrypted and signed attachment
set	pgp_encrypt_sign_command="pgpewrap gpg2 --passphrase-fd 0 -q --batch --output - --no-tty --encrypt --sign %?a?-u %a? --armor --always-trust -- -r %r -- %f"

# import a key into the public key ring
set	pgp_import_command="gpg2 -q --import -q %f"

# export a key from the public key ring
set	pgp_export_command="gpg2 -q --export --armor %r"

# verify a key
set	pgp_verify_key_command="gpg2 -q --batch --output - --no-tty --fingerprint --check-sigs %r"

# read in the public key ring
set	pgp_list_pubring_command="gpg2 -q --batch --output - --no-tty --with-colons --list-keys %r"

# read in the secret key ring
set	pgp_list_secring_command="gpg2 -q --batch --output - --no-tty --with-colons --list-secret-keys %r"

